{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  generateLangflowJson,\n} from \"@/ai/flows/generate-langflow-json-from-chat\";\nimport {\n  refineLangflowFlowFromChat,\n} from \"@/ai/flows/refine-langflow-flow-from-chat\";\nimport {\n  suggestLangflowImprovements,\n} from \"@/ai/flows/suggest-langflow-improvements\";\n\n// Check if the Gemini API key is set in the environment variables\nexport async function isApiKeySet(): Promise<boolean> {\n  return !!process.env.GOOGLE_API_KEY;\n}\n\n// Handle incoming chat messages\nexport async function handleChatMessage(\n  chatHistory: string,\n  currentJson: string\n): Promise<{ json?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n\n    let resultJson: string;\n\n    if (!currentJson) {\n      // If no JSON exists, generate a new one\n      const result = await generateLangflowJson({ chatHistory });\n      resultJson = result.langflowJson;\n    } else {\n      // If JSON exists, refine it based on the new chat message\n      const result = await refineLangflowFlowFromChat({\n        flowJson: currentJson,\n        chatHistory,\n      });\n      resultJson = result.refinedFlowJson;\n    }\n\n    // Validate the generated JSON\n    JSON.parse(resultJson);\n    return { json: resultJson };\n  } catch (error: any) {\n    console.error(\"Error handling chat message:\", error);\n    if (error instanceof SyntaxError) {\n      return { error: \"The generated flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Suggest improvements for the current flow\nexport async function handleSuggestImprovements(\n  langflowJson: string,\n  instructions: string\n): Promise<{ improvedJson?: string; explanation?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n    \n    const result = await suggestLangflowImprovements({\n      langflowJson,\n      instructions,\n    });\n    \n    // Validate the improved JSON\n    JSON.parse(result.improvedLangflowJson);\n\n    return {\n      improvedJson: result.improvedLangflowJson,\n      explanation: result.explanation,\n    };\n  } catch (error: any) {\n    console.error(\"Error suggesting improvements:\", error);\n     if (error instanceof SyntaxError) {\n      return { error: \"The improved flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Send the generated flow to the Langflow API\nexport async function sendToLangflow(\n  flowJson: string\n): Promise<{ success: boolean; error?: string }> {\n  try {\n    const parsedFlow = JSON.parse(flowJson);\n    const flowName = parsedFlow?.data?.name || `FlowCraft-${Date.now()}`;\n\n    // Langflow's API to create/update a flow is via POST to /api/v1/flows/\n    const response = await fetch(\"http://127.0.0.1:7860/api/v1/flows/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(parsedFlow),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(\n        `Langflow API Error (${response.status}): ${\n          errorData.detail || \"Unknown error\"\n        }`\n      );\n    }\n\n    return { success: true };\n  } catch (error: any) {\n    console.error(\"Error sending to Langflow:\", error);\n    if (error.message.includes('ECONNREFUSED')) {\n        return { success: false, error: 'Connection refused. Is your local Langflow instance running at http://127.0.0.1:7860?' };\n    }\n    return { success: false, error: error.message || \"An unknown error occurred.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAkBsB,oBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  generateLangflowJson,\n} from \"@/ai/flows/generate-langflow-json-from-chat\";\nimport {\n  refineLangflowFlowFromChat,\n} from \"@/ai/flows/refine-langflow-flow-from-chat\";\nimport {\n  suggestLangflowImprovements,\n} from \"@/ai/flows/suggest-langflow-improvements\";\n\n// Check if the Gemini API key is set in the environment variables\nexport async function isApiKeySet(): Promise<boolean> {\n  return !!process.env.GOOGLE_API_KEY;\n}\n\n// Handle incoming chat messages\nexport async function handleChatMessage(\n  chatHistory: string,\n  currentJson: string\n): Promise<{ json?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n\n    let resultJson: string;\n\n    if (!currentJson) {\n      // If no JSON exists, generate a new one\n      const result = await generateLangflowJson({ chatHistory });\n      resultJson = result.langflowJson;\n    } else {\n      // If JSON exists, refine it based on the new chat message\n      const result = await refineLangflowFlowFromChat({\n        flowJson: currentJson,\n        chatHistory,\n      });\n      resultJson = result.refinedFlowJson;\n    }\n\n    // Validate the generated JSON\n    JSON.parse(resultJson);\n    return { json: resultJson };\n  } catch (error: any) {\n    console.error(\"Error handling chat message:\", error);\n    if (error instanceof SyntaxError) {\n      return { error: \"The generated flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Suggest improvements for the current flow\nexport async function handleSuggestImprovements(\n  langflowJson: string,\n  instructions: string\n): Promise<{ improvedJson?: string; explanation?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n    \n    const result = await suggestLangflowImprovements({\n      langflowJson,\n      instructions,\n    });\n    \n    // Validate the improved JSON\n    JSON.parse(result.improvedLangflowJson);\n\n    return {\n      improvedJson: result.improvedLangflowJson,\n      explanation: result.explanation,\n    };\n  } catch (error: any) {\n    console.error(\"Error suggesting improvements:\", error);\n     if (error instanceof SyntaxError) {\n      return { error: \"The improved flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Send the generated flow to the Langflow API\nexport async function sendToLangflow(\n  flowJson: string\n): Promise<{ success: boolean; error?: string }> {\n  try {\n    const parsedFlow = JSON.parse(flowJson);\n    const flowName = parsedFlow?.data?.name || `FlowCraft-${Date.now()}`;\n\n    // Langflow's API to create/update a flow is via POST to /api/v1/flows/\n    const response = await fetch(\"http://127.0.0.1:7860/api/v1/flows/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(parsedFlow),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(\n        `Langflow API Error (${response.status}): ${\n          errorData.detail || \"Unknown error\"\n        }`\n      );\n    }\n\n    return { success: true };\n  } catch (error: any) {\n    console.error(\"Error sending to Langflow:\", error);\n    if (error.message.includes('ECONNREFUSED')) {\n        return { success: false, error: 'Connection refused. Is your local Langflow instance running at http://127.0.0.1:7860?' };\n    }\n    return { success: false, error: error.message || \"An unknown error occurred.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAasB,cAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  generateLangflowJson,\n} from \"@/ai/flows/generate-langflow-json-from-chat\";\nimport {\n  refineLangflowFlowFromChat,\n} from \"@/ai/flows/refine-langflow-flow-from-chat\";\nimport {\n  suggestLangflowImprovements,\n} from \"@/ai/flows/suggest-langflow-improvements\";\n\n// Check if the Gemini API key is set in the environment variables\nexport async function isApiKeySet(): Promise<boolean> {\n  return !!process.env.GOOGLE_API_KEY;\n}\n\n// Handle incoming chat messages\nexport async function handleChatMessage(\n  chatHistory: string,\n  currentJson: string\n): Promise<{ json?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n\n    let resultJson: string;\n\n    if (!currentJson) {\n      // If no JSON exists, generate a new one\n      const result = await generateLangflowJson({ chatHistory });\n      resultJson = result.langflowJson;\n    } else {\n      // If JSON exists, refine it based on the new chat message\n      const result = await refineLangflowFlowFromChat({\n        flowJson: currentJson,\n        chatHistory,\n      });\n      resultJson = result.refinedFlowJson;\n    }\n\n    // Validate the generated JSON\n    JSON.parse(resultJson);\n    return { json: resultJson };\n  } catch (error: any) {\n    console.error(\"Error handling chat message:\", error);\n    if (error instanceof SyntaxError) {\n      return { error: \"The generated flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Suggest improvements for the current flow\nexport async function handleSuggestImprovements(\n  langflowJson: string,\n  instructions: string\n): Promise<{ improvedJson?: string; explanation?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n    \n    const result = await suggestLangflowImprovements({\n      langflowJson,\n      instructions,\n    });\n    \n    // Validate the improved JSON\n    JSON.parse(result.improvedLangflowJson);\n\n    return {\n      improvedJson: result.improvedLangflowJson,\n      explanation: result.explanation,\n    };\n  } catch (error: any) {\n    console.error(\"Error suggesting improvements:\", error);\n     if (error instanceof SyntaxError) {\n      return { error: \"The improved flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Send the generated flow to the Langflow API\nexport async function sendToLangflow(\n  flowJson: string\n): Promise<{ success: boolean; error?: string }> {\n  try {\n    const parsedFlow = JSON.parse(flowJson);\n    const flowName = parsedFlow?.data?.name || `FlowCraft-${Date.now()}`;\n\n    // Langflow's API to create/update a flow is via POST to /api/v1/flows/\n    const response = await fetch(\"http://127.0.0.1:7860/api/v1/flows/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(parsedFlow),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(\n        `Langflow API Error (${response.status}): ${\n          errorData.detail || \"Unknown error\"\n        }`\n      );\n    }\n\n    return { success: true };\n  } catch (error: any) {\n    console.error(\"Error sending to Langflow:\", error);\n    if (error.message.includes('ECONNREFUSED')) {\n        return { success: false, error: 'Connection refused. Is your local Langflow instance running at http://127.0.0.1:7860?' };\n    }\n    return { success: false, error: error.message || \"An unknown error occurred.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAsFsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/config/api-key-dialog.tsx"],"sourcesContent":["import {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Code } from \"lucide-react\";\n\nexport default function ApiKeyDialog({ children }: { children: React.ReactNode }) {\n  return (\n    <Dialog>\n      <DialogTrigger asChild>{children}</DialogTrigger>\n      <DialogContent className=\"sm:max-w-[480px]\">\n        <DialogHeader>\n          <DialogTitle className=\"flex items-center gap-2\">\n            <Code /> Configure Gemini API Key\n          </DialogTitle>\n          <DialogDescription>\n            To enable generative features, you need to provide your Google\n            Gemini API key.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"space-y-4 py-4 text-sm\">\n          <p>\n            1. Create a new file named{\" \"}\n            <code className=\"font-mono bg-muted px-1.5 py-1 rounded\">\n              .env.local\n            </code>{\" \"}\n            in the root directory of your project.\n          </p>\n          <p>\n            2. Add the following line to the file, replacing{\" \"}\n            <code className=\"font-mono bg-muted px-1.5 py-1 rounded\">\n              YOUR_API_KEY_HERE\n            </code>{\" \"}\n            with your actual key:\n          </p>\n          <pre className=\"p-3 rounded-md bg-muted text-muted-foreground overflow-x-auto\">\n            <code>GOOGLE_API_KEY='YOUR_API_KEY_HERE'</code>\n          </pre>\n          <p>\n            3. Save the file and restart your development server for the changes\n            to take effect.\n          </p>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AAQA;;;;AAEe,SAAS,aAAa,EAAE,QAAQ,EAAiC;IAC9E,qBACE,6LAAC,qIAAA,CAAA,SAAM;;0BACL,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,OAAO;0BAAE;;;;;;0BACxB,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,WAAU;;kCACvB,6LAAC,qIAAA,CAAA,eAAY;;0CACX,6LAAC,qIAAA,CAAA,cAAW;gCAAC,WAAU;;kDACrB,6LAAC,qMAAA,CAAA,OAAI;;;;;oCAAG;;;;;;;0CAEV,6LAAC,qIAAA,CAAA,oBAAiB;0CAAC;;;;;;;;;;;;kCAKrB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;;oCAAE;oCAC0B;kDAC3B,6LAAC;wCAAK,WAAU;kDAAyC;;;;;;oCAEjD;oCAAI;;;;;;;0CAGd,6LAAC;;oCAAE;oCACgD;kDACjD,6LAAC;wCAAK,WAAU;kDAAyC;;;;;;oCAEjD;oCAAI;;;;;;;0CAGd,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;8CAAK;;;;;;;;;;;0CAER,6LAAC;0CAAE;;;;;;;;;;;;;;;;;;;;;;;;AAQb;KAxCwB","debugId":null}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 421, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/header.tsx"],"sourcesContent":["\"use client\";\n\nimport { BrainCircuit, KeyRound } from \"lucide-react\";\nimport ApiKeyDialog from \"../config/api-key-dialog\";\nimport { Button } from \"../ui/button\";\n\nexport default function Header() {\n  return (\n    <header className=\"flex items-center justify-between p-4 border-b bg-card shadow-sm\">\n      <div className=\"flex items-center gap-3\">\n        <BrainCircuit className=\"h-8 w-8 text-primary\" />\n        <h1 className=\"text-2xl font-bold tracking-tight text-foreground\">\n          FlowCraft AI\n        </h1>\n      </div>\n      <ApiKeyDialog>\n        <Button variant=\"outline\" size=\"sm\">\n          <KeyRound className=\"mr-2 h-4 w-4\" />\n          API Key\n        </Button>\n      </ApiKeyDialog>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,yNAAA,CAAA,eAAY;wBAAC,WAAU;;;;;;kCACxB,6LAAC;wBAAG,WAAU;kCAAoD;;;;;;;;;;;;0BAIpE,6LAAC,uJAAA,CAAA,UAAY;0BACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBAAC,SAAQ;oBAAU,MAAK;;sCAC7B,6LAAC,iNAAA,CAAA,WAAQ;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;;;;;;;;;;;;AAM/C;KAjBwB","debugId":null}},
    {"offset": {"line": 505, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 582, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/main-layout.tsx"],"sourcesContent":["\"use client\";\n\nimport { AlertTriangle } from \"lucide-react\";\nimport Header from \"./header\";\nimport ApiKeyDialog from \"../config/api-key-dialog\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface MainLayoutProps {\n  children: React.ReactNode;\n  apiKeyOk: boolean | null;\n}\n\nexport default function MainLayout({ children, apiKeyOk }: MainLayoutProps) {\n  return (\n    <div className=\"flex flex-col h-screen bg-background\">\n      <Header />\n      {apiKeyOk === false && (\n        <Alert variant=\"destructive\" className=\"m-4 rounded-lg border-2\">\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertTitle>Configuration Error</AlertTitle>\n            <AlertDescription className=\"flex items-center justify-between\">\n              <span>Your Gemini API key is not configured. Please set it up to use the app.</span>\n              <ApiKeyDialog>\n                <Button variant=\"destructive\" size=\"sm\">Show Instructions</Button>\n              </ApiKeyDialog>\n            </AlertDescription>\n        </Alert>\n      )}\n      {children}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAae,SAAS,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAmB;IACxE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,yIAAA,CAAA,UAAM;;;;;YACN,aAAa,uBACZ,6LAAC,oIAAA,CAAA,QAAK;gBAAC,SAAQ;gBAAc,WAAU;;kCACnC,6LAAC,2NAAA,CAAA,gBAAa;wBAAC,WAAU;;;;;;kCACzB,6LAAC,oIAAA,CAAA,aAAU;kCAAC;;;;;;kCACZ,6LAAC,oIAAA,CAAA,mBAAgB;wBAAC,WAAU;;0CAC1B,6LAAC;0CAAK;;;;;;0CACN,6LAAC,uJAAA,CAAA,UAAY;0CACX,cAAA,6LAAC,qIAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAc,MAAK;8CAAK;;;;;;;;;;;;;;;;;;;;;;;YAKjD;;;;;;;AAGP;KAnBwB","debugId":null}},
    {"offset": {"line": 682, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 717, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf;KAVS","debugId":null}},
    {"offset": {"line": 927, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat/chat-message.tsx"],"sourcesContent":["\"use client\";\n\nimport { Bot, User } from \"lucide-react\";\nimport type { ChatMessage } from \"@/lib/types\";\nimport { cn } from \"@/lib/utils\";\n\ninterface ChatMessageProps {\n  message: ChatMessage;\n}\n\nexport default function ChatMessage({ message }: ChatMessageProps) {\n  const isUser = message.role === \"user\";\n\n  return (\n    <div\n      className={cn(\n        \"flex items-start space-x-4\",\n        isUser ? \"justify-end\" : \"justify-start\"\n      )}\n    >\n      {!isUser && (\n        <div className=\"bg-primary rounded-full p-2 flex-shrink-0\">\n          <Bot className=\"h-6 w-6 text-primary-foreground\" />\n        </div>\n      )}\n\n      <div\n        className={cn(\n          \"px-4 py-3 rounded-xl max-w-lg\",\n          isUser\n            ? \"bg-primary text-primary-foreground\"\n            : \"bg-muted text-muted-foreground\"\n        )}\n      >\n        <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\n      </div>\n      \n      {isUser && (\n         <div className=\"bg-secondary text-secondary-foreground rounded-full p-2 flex-shrink-0\">\n          <User className=\"h-6 w-6\" />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAEA;AAJA;;;;AAUe,SAAS,YAAY,EAAE,OAAO,EAAoB;IAC/D,MAAM,SAAS,QAAQ,IAAI,KAAK;IAEhC,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8BACA,SAAS,gBAAgB;;YAG1B,CAAC,wBACA,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,mMAAA,CAAA,MAAG;oBAAC,WAAU;;;;;;;;;;;0BAInB,6LAAC;gBACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iCACA,SACI,uCACA;0BAGN,cAAA,6LAAC;oBAAE,WAAU;8BAA+B,QAAQ,OAAO;;;;;;;;;;;YAG5D,wBACE,6LAAC;gBAAI,WAAU;0BACd,cAAA,6LAAC,qMAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAK1B;KAlCwB","debugId":null}},
    {"offset": {"line": 1005, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat/chat-panel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useRef, useEffect } from \"react\";\nimport { SendHorizontal, Trash2, Bot } from \"lucide-react\";\nimport type { ChatMessage as ChatMessageType } from \"@/lib/types\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport ChatMessage from \"./chat-message\";\n\ninterface ChatPanelProps {\n  messages: ChatMessageType[];\n  onNewMessage: (message: string) => void;\n  isSending: boolean;\n  clearChat: () => void;\n}\n\nexport default function ChatPanel({\n  messages,\n  onNewMessage,\n  isSending,\n  clearChat\n}: ChatPanelProps) {\n  const [input, setInput] = useState(\"\");\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Scroll to bottom when new messages are added\n    if (scrollAreaRef.current) {\n      scrollAreaRef.current.scrollTo({\n        top: scrollAreaRef.current.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [messages]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (input.trim() && !isSending) {\n      onNewMessage(input.trim());\n      setInput(\"\");\n    }\n  };\n\n  return (\n    <Card className=\"flex flex-col h-full max-h-[calc(100vh-120px)]\">\n      <CardHeader className=\"flex flex-row items-center justify-between\">\n        <CardTitle className=\"flex items-center gap-2\">\n            <Bot />\n            Chat\n        </CardTitle>\n        <Button variant=\"ghost\" size=\"icon\" onClick={clearChat} aria-label=\"Clear chat\">\n            <Trash2 className=\"h-4 w-4 text-muted-foreground\" />\n        </Button>\n      </CardHeader>\n      <CardContent className=\"flex-1 overflow-hidden\">\n        <ScrollArea className=\"h-full pr-4\" ref={scrollAreaRef}>\n          <div className=\"space-y-6\">\n            {messages.map((message) => (\n              <ChatMessage key={message.id} message={message} />\n            ))}\n            {isSending && (\n              <div className=\"flex items-start space-x-4\">\n                <div className=\"bg-primary rounded-full p-2\">\n                  <Bot className=\"h-6 w-6 text-primary-foreground\" />\n                </div>\n                <div className=\"space-y-2 flex-1\">\n                  <Skeleton className=\"h-4 w-1/4\" />\n                  <Skeleton className=\"h-4 w-3/4\" />\n                  <Skeleton className=\"h-4 w-1/2\" />\n                </div>\n              </div>\n            )}\n          </div>\n        </ScrollArea>\n      </CardContent>\n      <CardFooter>\n        <form onSubmit={handleSubmit} className=\"flex w-full items-center space-x-2\">\n          <Textarea\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Describe your flow, e.g., 'Create a chatbot that uses a vector store...'\"\n            className=\"min-h-0 flex-1 resize-none\"\n            rows={2}\n            onKeyDown={(e) => {\n              if (e.key === \"Enter\" && !e.shiftKey) {\n                handleSubmit(e);\n              }\n            }}\n            disabled={isSending}\n          />\n          <Button type=\"submit\" size=\"icon\" disabled={!input.trim() || isSending}>\n            <SendHorizontal className=\"h-4 w-4\" />\n            <span className=\"sr-only\">Send</span>\n          </Button>\n        </form>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAVA;;;;;;;;;AAmBe,SAAS,UAAU,EAChC,QAAQ,EACR,YAAY,EACZ,SAAS,EACT,SAAS,EACM;;IACf,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAkB;IAE7C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;+BAAE;YACR,+CAA+C;YAC/C,IAAI,cAAc,OAAO,EAAE;gBACzB,cAAc,OAAO,CAAC,QAAQ,CAAC;oBAC7B,KAAK,cAAc,OAAO,CAAC,YAAY;oBACvC,UAAU;gBACZ;YACF;QACF;8BAAG;QAAC;KAAS;IAEb,MAAM,eAAe,CAAC;QACpB,EAAE,cAAc;QAChB,IAAI,MAAM,IAAI,MAAM,CAAC,WAAW;YAC9B,aAAa,MAAM,IAAI;YACvB,SAAS;QACX;IACF;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACjB,6LAAC,mMAAA,CAAA,MAAG;;;;;4BAAG;;;;;;;kCAGX,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAO,SAAS;wBAAW,cAAW;kCAC/D,cAAA,6LAAC,6MAAA,CAAA,SAAM;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAGxB,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;0BACrB,cAAA,6LAAC,6IAAA,CAAA,aAAU;oBAAC,WAAU;oBAAc,KAAK;8BACvC,cAAA,6LAAC;wBAAI,WAAU;;4BACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC,gJAAA,CAAA,UAAW;oCAAkB,SAAS;mCAArB,QAAQ,EAAE;;;;;4BAE7B,2BACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;kDACb,cAAA,6LAAC,mMAAA,CAAA,MAAG;4CAAC,WAAU;;;;;;;;;;;kDAEjB,6LAAC;wCAAI,WAAU;;0DACb,6LAAC,uIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,6LAAC,uIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;0DACpB,6LAAC,uIAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAOhC,6LAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;sCACtC,6LAAC,uIAAA,CAAA,WAAQ;4BACP,OAAO;4BACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;4BACxC,aAAY;4BACZ,WAAU;4BACV,MAAM;4BACN,WAAW,CAAC;gCACV,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;oCACpC,aAAa;gCACf;4BACF;4BACA,UAAU;;;;;;sCAEZ,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,MAAK;4BAAO,UAAU,CAAC,MAAM,IAAI,MAAM;;8CAC3D,6LAAC,6NAAA,CAAA,iBAAc;oCAAC,WAAU;;;;;;8CAC1B,6LAAC;oCAAK,WAAU;8CAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMtC;GAlFwB;KAAA","debugId":null}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\"use server\";\n\nimport {\n  generateLangflowJson,\n} from \"@/ai/flows/generate-langflow-json-from-chat\";\nimport {\n  refineLangflowFlowFromChat,\n} from \"@/ai/flows/refine-langflow-flow-from-chat\";\nimport {\n  suggestLangflowImprovements,\n} from \"@/ai/flows/suggest-langflow-improvements\";\n\n// Check if the Gemini API key is set in the environment variables\nexport async function isApiKeySet(): Promise<boolean> {\n  return !!process.env.GOOGLE_API_KEY;\n}\n\n// Handle incoming chat messages\nexport async function handleChatMessage(\n  chatHistory: string,\n  currentJson: string\n): Promise<{ json?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n\n    let resultJson: string;\n\n    if (!currentJson) {\n      // If no JSON exists, generate a new one\n      const result = await generateLangflowJson({ chatHistory });\n      resultJson = result.langflowJson;\n    } else {\n      // If JSON exists, refine it based on the new chat message\n      const result = await refineLangflowFlowFromChat({\n        flowJson: currentJson,\n        chatHistory,\n      });\n      resultJson = result.refinedFlowJson;\n    }\n\n    // Validate the generated JSON\n    JSON.parse(resultJson);\n    return { json: resultJson };\n  } catch (error: any) {\n    console.error(\"Error handling chat message:\", error);\n    if (error instanceof SyntaxError) {\n      return { error: \"The generated flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Suggest improvements for the current flow\nexport async function handleSuggestImprovements(\n  langflowJson: string,\n  instructions: string\n): Promise<{ improvedJson?: string; explanation?: string; error?: string }> {\n  try {\n    if (!process.env.GOOGLE_API_KEY) {\n      throw new Error(\"GOOGLE_API_KEY is not set in the environment.\");\n    }\n    \n    const result = await suggestLangflowImprovements({\n      langflowJson,\n      instructions,\n    });\n    \n    // Validate the improved JSON\n    JSON.parse(result.improvedLangflowJson);\n\n    return {\n      improvedJson: result.improvedLangflowJson,\n      explanation: result.explanation,\n    };\n  } catch (error: any) {\n    console.error(\"Error suggesting improvements:\", error);\n     if (error instanceof SyntaxError) {\n      return { error: \"The improved flow is not valid JSON. Please try again.\" };\n    }\n    return { error: error.message || \"An unknown error occurred.\" };\n  }\n}\n\n// Send the generated flow to the Langflow API\nexport async function sendToLangflow(\n  flowJson: string\n): Promise<{ success: boolean; error?: string }> {\n  try {\n    const parsedFlow = JSON.parse(flowJson);\n    const flowName = parsedFlow?.data?.name || `FlowCraft-${Date.now()}`;\n\n    // Langflow's API to create/update a flow is via POST to /api/v1/flows/\n    const response = await fetch(\"http://127.0.0.1:7860/api/v1/flows/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(parsedFlow),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(\n        `Langflow API Error (${response.status}): ${\n          errorData.detail || \"Unknown error\"\n        }`\n      );\n    }\n\n    return { success: true };\n  } catch (error: any) {\n    console.error(\"Error sending to Langflow:\", error);\n    if (error.message.includes('ECONNREFUSED')) {\n        return { success: false, error: 'Connection refused. Is your local Langflow instance running at http://127.0.0.1:7860?' };\n    }\n    return { success: false, error: error.message || \"An unknown error occurred.\" };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAuDsB,4BAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/flow/improve-flow-dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useTransition } from \"react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n  DialogFooter,\n  DialogClose,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { handleSuggestImprovements } from \"@/app/actions\";\nimport { Alert, AlertDescription, AlertTitle } from \"../ui/alert\";\nimport { Lightbulb } from \"lucide-react\";\n\ninterface ImproveFlowDialogProps {\n  children: React.ReactNode;\n  currentJson: string;\n  onUpdateJson: (newJson: string) => void;\n  isProcessing: boolean;\n}\n\nexport default function ImproveFlowDialog({\n  children,\n  currentJson,\n  onUpdateJson,\n  isProcessing,\n}: ImproveFlowDialogProps) {\n  const [open, setOpen] = useState(false);\n  const [instructions, setInstructions] = useState(\"\");\n  const [improvement, setImprovement] = useState<{\n    json: string;\n    explanation: string;\n  } | null>(null);\n  const [isPending, startTransition] = useTransition();\n  const { toast } = useToast();\n\n  const handleSubmit = () => {\n    if (!instructions) {\n      toast({\n        variant: \"destructive\",\n        title: \"Instructions Required\",\n        description: \"Please tell me how you want to improve the flow.\",\n      });\n      return;\n    }\n    startTransition(async () => {\n      const result = await handleSuggestImprovements(currentJson, instructions);\n      if (result.error) {\n        toast({\n          variant: \"destructive\",\n          title: \"Error Getting Suggestions\",\n          description: result.error,\n        });\n      } else if (result.improvedJson && result.explanation) {\n        setImprovement({\n          json: result.improvedJson,\n          explanation: result.explanation,\n        });\n      }\n    });\n  };\n\n  const applyChanges = () => {\n    if (improvement) {\n      onUpdateJson(improvement.json);\n      toast({ title: \"Flow updated with improvements!\" });\n      handleClose();\n    }\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    // Reset state after a short delay to allow for closing animation\n    setTimeout(() => {\n      setInstructions(\"\");\n      setImprovement(null);\n    }, 300);\n  };\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild disabled={!currentJson || isProcessing}>\n        {children}\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>Suggest Flow Improvements</DialogTitle>\n          <DialogDescription>\n            Get AI-powered suggestions to enhance your Langflow configuration.\n          </DialogDescription>\n        </DialogHeader>\n\n        {!improvement ? (\n          <div className=\"py-4 space-y-4\">\n            <div>\n              <Label htmlFor=\"instructions\">Improvement Instructions</Label>\n              <Textarea\n                id=\"instructions\"\n                value={instructions}\n                onChange={(e) => setInstructions(e.target.value)}\n                placeholder=\"e.g., 'Add memory to the chain', 'Use a different model for the LLM', 'Make the output a JSON object'\"\n                className=\"mt-2\"\n                rows={4}\n              />\n            </div>\n            <DialogFooter>\n              <Button\n                onClick={handleSubmit}\n                disabled={!instructions || isPending}\n              >\n                {isPending ? \"Getting Suggestions...\" : \"Get Suggestions\"}\n              </Button>\n            </DialogFooter>\n          </div>\n        ) : (\n          <div className=\"py-4 space-y-4 max-h-[70vh] overflow-y-auto\">\n            <Alert>\n              <Lightbulb className=\"h-4 w-4\" />\n              <AlertTitle>Improvement Suggestion</AlertTitle>\n              <AlertDescription>{improvement.explanation}</AlertDescription>\n            </Alert>\n            <div>\n              <Label>Suggested JSON</Label>\n              <Textarea\n                readOnly\n                value={JSON.stringify(\n                  JSON.parse(improvement.json),\n                  null,\n                  2\n                )}\n                className=\"mt-2 h-64 font-mono text-xs\"\n              />\n            </div>\n            <DialogFooter>\n              <Button variant=\"outline\" onClick={() => setImprovement(null)}>\n                Back\n              </Button>\n              <Button onClick={applyChanges}>Apply Changes</Button>\n            </DialogFooter>\n          </div>\n        )}\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1597, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/flow/flow-panel.tsx"],"sourcesContent":["\"use client\";\n\nimport { Download, Send, Lightbulb, Clipboard, ClipboardCheck } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport ImproveFlowDialog from \"./improve-flow-dialog\";\nimport { useState } from \"react\";\n\ninterface FlowPanelProps {\n  generatedJson: string;\n  setGeneratedJson: (json: string) => void;\n  onSendToLangflow: () => void;\n  isProcessing: boolean;\n}\n\nexport default function FlowPanel({\n  generatedJson,\n  setGeneratedJson,\n  onSendToLangflow,\n  isProcessing,\n}: FlowPanelProps) {\n  const { toast } = useToast();\n  const [copied, setCopied] = useState(false);\n\n  const handleDownload = () => {\n    if (!generatedJson) return;\n    const blob = new Blob([generatedJson], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"flow.json\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n    toast({ title: \"Downloaded flow.json\" });\n  };\n\n  const handleCopy = () => {\n    if (!generatedJson) return;\n    navigator.clipboard.writeText(generatedJson);\n    setCopied(true);\n    toast({ title: \"Copied to clipboard!\" });\n    setTimeout(() => setCopied(false), 2000);\n  }\n\n  const formattedJson = (jsonString: string) => {\n    try {\n      if (!jsonString) return \"\";\n      const parsed = JSON.parse(jsonString);\n      return JSON.stringify(parsed, null, 2);\n    } catch {\n      return jsonString; // Return original string if it's not valid JSON\n    }\n  };\n\n  return (\n    <Card className=\"flex flex-col h-full max-h-[calc(100vh-120px)]\">\n      <CardHeader>\n        <CardTitle>Generated Flow</CardTitle>\n        <CardDescription>\n          This is the generated Langflow JSON. You can refine it by chatting.\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex-1 relative\">\n        <Button variant=\"ghost\" size=\"icon\" className=\"absolute top-5 right-5 z-10\" onClick={handleCopy} disabled={!generatedJson}>\n          {copied ? <ClipboardCheck className=\"h-4 w-4\" /> : <Clipboard className=\"h-4 w-4\" />}\n          <span className=\"sr-only\">Copy JSON</span>\n        </Button>\n        <Textarea\n          readOnly\n          value={formattedJson(generatedJson)}\n          placeholder=\"Your generated Langflow JSON will appear here...\"\n          className=\"w-full h-full resize-none font-mono text-xs\"\n        />\n      </CardContent>\n      <CardFooter className=\"justify-end space-x-2\">\n        <ImproveFlowDialog\n          currentJson={generatedJson}\n          onUpdateJson={setGeneratedJson}\n          isProcessing={isProcessing}\n        >\n          <Button variant=\"outline\" disabled={!generatedJson || isProcessing}>\n            <Lightbulb className=\"mr-2 h-4 w-4\" />\n            Suggest Improvements\n          </Button>\n        </ImproveFlowDialog>\n        <Button onClick={handleDownload} variant=\"outline\" disabled={!generatedJson || isProcessing}>\n          <Download className=\"mr-2 h-4 w-4\" />\n          Download\n        </Button>\n        <Button onClick={onSendToLangflow} disabled={!generatedJson || isProcessing}>\n          <Send className=\"mr-2 h-4 w-4\" />\n          Send to Langflow\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AACA;AACA;;;AAfA;;;;;;;;AAwBe,SAAS,UAAU,EAChC,aAAa,EACb,gBAAgB,EAChB,gBAAgB,EAChB,YAAY,EACG;;IACf,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,iBAAiB;QACrB,IAAI,CAAC,eAAe;QACpB,MAAM,OAAO,IAAI,KAAK;YAAC;SAAc,EAAE;YAAE,MAAM;QAAmB;QAClE,MAAM,MAAM,IAAI,eAAe,CAAC;QAChC,MAAM,IAAI,SAAS,aAAa,CAAC;QACjC,EAAE,IAAI,GAAG;QACT,EAAE,QAAQ,GAAG;QACb,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,EAAE,KAAK;QACP,SAAS,IAAI,CAAC,WAAW,CAAC;QAC1B,IAAI,eAAe,CAAC;QACpB,MAAM;YAAE,OAAO;QAAuB;IACxC;IAEA,MAAM,aAAa;QACjB,IAAI,CAAC,eAAe;QACpB,UAAU,SAAS,CAAC,SAAS,CAAC;QAC9B,UAAU;QACV,MAAM;YAAE,OAAO;QAAuB;QACtC,WAAW,IAAM,UAAU,QAAQ;IACrC;IAEA,MAAM,gBAAgB,CAAC;QACrB,IAAI;YACF,IAAI,CAAC,YAAY,OAAO;YACxB,MAAM,SAAS,KAAK,KAAK,CAAC;YAC1B,OAAO,KAAK,SAAS,CAAC,QAAQ,MAAM;QACtC,EAAE,OAAM;YACN,OAAO,YAAY,gDAAgD;QACrE;IACF;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;;kCACT,6LAAC,mIAAA,CAAA,YAAS;kCAAC;;;;;;kCACX,6LAAC,mIAAA,CAAA,kBAAe;kCAAC;;;;;;;;;;;;0BAInB,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,MAAK;wBAAO,WAAU;wBAA8B,SAAS;wBAAY,UAAU,CAAC;;4BACzG,uBAAS,6LAAC,6NAAA,CAAA,iBAAc;gCAAC,WAAU;;;;;qDAAe,6LAAC,+MAAA,CAAA,YAAS;gCAAC,WAAU;;;;;;0CACxE,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;kCAE5B,6LAAC,uIAAA,CAAA,WAAQ;wBACP,QAAQ;wBACR,OAAO,cAAc;wBACrB,aAAY;wBACZ,WAAU;;;;;;;;;;;;0BAGd,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,0JAAA,CAAA,UAAiB;wBAChB,aAAa;wBACb,cAAc;wBACd,cAAc;kCAEd,cAAA,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,UAAU,CAAC,iBAAiB;;8CACpD,6LAAC,+MAAA,CAAA,YAAS;oCAAC,WAAU;;;;;;gCAAiB;;;;;;;;;;;;kCAI1C,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAgB,SAAQ;wBAAU,UAAU,CAAC,iBAAiB;;0CAC7E,6LAAC,6MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;kCAGvC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAkB,UAAU,CAAC,iBAAiB;;0CAC7D,6LAAC,qMAAA,CAAA,OAAI;gCAAC,WAAU;;;;;;4BAAiB;;;;;;;;;;;;;;;;;;;AAM3C;GAnFwB;;QAMJ,+HAAA,CAAA,WAAQ;;;KANJ","debugId":null}},
    {"offset": {"line": 1838, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useTransition } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { ChatMessage } from \"@/lib/types\";\nimport {\n  handleChatMessage,\n  isApiKeySet,\n  sendToLangflow,\n} from \"@/app/actions\";\nimport MainLayout from \"@/components/layout/main-layout\";\nimport ChatPanel from \"@/components/chat/chat-panel\";\nimport FlowPanel from \"@/components/flow/flow-panel\";\n\nexport default function Home() {\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [generatedJson, setGeneratedJson] = useState<string>(\"\");\n  const [apiKeyOk, setApiKeyOk] = useState<boolean | null>(null);\n  const [isPending, startTransition] = useTransition();\n  const { toast } = useToast();\n\n  useEffect(() => {\n    isApiKeySet().then(setApiKeyOk);\n    setMessages([\n      {\n        id: \"1\",\n        role: \"assistant\",\n        content: \"Hello! I'm FlowCraft AI. Describe the Langflow flow you want to create, and I'll generate it for you.\",\n      },\n    ]);\n  }, []);\n\n  const onNewMessage = (message: string) => {\n    const newMessages: ChatMessage[] = [\n      ...messages,\n      { id: Date.now().toString(), role: \"user\", content: message },\n    ];\n    setMessages(newMessages);\n\n    startTransition(async () => {\n      try {\n        const chatHistory = newMessages\n          .map((m) => `${m.role}: ${m.content}`)\n          .join(\"\\n\");\n        const result = await handleChatMessage(chatHistory, generatedJson);\n        \n        if (result.error) {\n          throw new Error(result.error);\n        }\n        \n        setGeneratedJson(result.json || \"\");\n\n        if (!generatedJson) {\n           setMessages(prev => [...prev, {id: Date.now().toString(), role: 'assistant', content: \"I've created the initial version of your flow. You can see it on the right. Feel free to ask for any refinements!\"}]);\n        }\n\n      } catch (e: any) {\n        toast({\n          variant: \"destructive\",\n          title: \"Error Generating Flow\",\n          description: e.message || \"An unknown error occurred.\",\n        });\n        setMessages(prev => prev.slice(0, -1)); // Remove user message on failure\n      }\n    });\n  };\n\n  const handleSendToLangflow = () => {\n    if (!generatedJson) {\n      toast({\n        variant: \"destructive\",\n        title: \"No Flow to Send\",\n        description: \"Please generate a flow first.\",\n      });\n      return;\n    }\n    startTransition(async () => {\n      try {\n        const result = await sendToLangflow(generatedJson);\n        if (result.success) {\n          toast({\n            title: \"Flow Sent!\",\n            description: \"The flow was successfully sent to your Langflow instance.\",\n          });\n        } else {\n          throw new Error(result.error);\n        }\n      } catch (e: any) {\n        toast({\n          variant: \"destructive\",\n          title: \"Failed to Send Flow\",\n          description: e.message || \"Please check if Langflow is running.\",\n        });\n      }\n    });\n  };\n\n  const clearChat = () => {\n    setMessages([\n      {\n        id: \"1\",\n        role: \"assistant\",\n        content: \"Chat cleared. Let's start over! What kind of flow do you need?\",\n      },\n    ]);\n    setGeneratedJson(\"\");\n  }\n\n  return (\n    <MainLayout apiKeyOk={apiKeyOk}>\n      <div className=\"flex-1 grid grid-cols-1 md:grid-cols-2 gap-8 p-4 md:p-8 overflow-hidden\">\n        <ChatPanel\n          messages={messages}\n          onNewMessage={onNewMessage}\n          isSending={isPending}\n          clearChat={clearChat}\n        />\n        <FlowPanel\n          generatedJson={generatedJson}\n          setGeneratedJson={setGeneratedJson}\n          onSendToLangflow={handleSendToLangflow}\n          isProcessing={isPending}\n        />\n      </div>\n    </MainLayout>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}